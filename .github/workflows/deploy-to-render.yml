name: Deploy to Render

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build --if-present

      - name: Run tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          VERSION=${{ needs.build.outputs.version }}
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nl-ng-assignment:latest -t ${{ secrets.DOCKERHUB_USERNAME }}/nl-ng-assignment:$VERSION .

      - name: Push Docker image
        run: |
          VERSION=${{ needs.build.outputs.version }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nl-ng-assignment:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nl-ng-assignment:$VERSION

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: Release v${{ needs.build.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Render
        uses: gh-actions-workflows/deploy-docker-render@v1.1
        with:
          deploy-hook: ${{ secrets.RENDER_DEPLOY_HOOK }}
          image-url: gauravtalele32/nl-ng-assignement:latest
          render-api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-deployment: true
